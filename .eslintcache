[{"C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\index.js":"1","C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\App.js":"2","C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\reportWebVitals.js":"3","C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\components\\Status.js":"4","C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\pages\\mainPage\\MainPage.js":"5","C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\pages\\welcomePage\\WelcomePage.js":"6","C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\components\\mapContainer\\MapContainer.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":1002,"mtime":1610475944811,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":182,"mtime":1610413300640,"results":"12","hashOfConfig":"9"},{"size":6523,"mtime":1610479474624,"results":"13","hashOfConfig":"9"},{"size":1536,"mtime":1610475944816,"results":"14","hashOfConfig":"9"},{"size":1879,"mtime":1610498132608,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ur615g",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\index.js",[],["35","36"],"C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\App.js",["37"],"// import './App.css';\nimport Status from \"./components/Status\";\nimport WelcomePage from \"./pages/welcomePage/WelcomePage\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {Route, Switch} from \"react-router-dom\";\nimport MainPage from \"./pages/mainPage/MainPage\";\n\n\nfunction App() {\n    return (\n        //   <div className=\"App\">\n        //       <div className=\"leftBar\">\n        //           <div className=\"map\">this is MAP</div>\n        //           <div className=\"bottomBar\">this is BOTTOM bar</div>\n        //           <Status></Status>\n        //       </div>\n        //\n        //       <div className=\"rightBar\">this is RIGHT bar</div>\n        //\n        //   </div>\n\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <WelcomePage />\n                </Route>\n                <Route path=\"/game\">\n                    <MainPage/>\n                </Route>\n            </Switch>\n\n        </Router>\n\n\n\n    );\n}\n\nexport default App;\n","C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\reportWebVitals.js",[],"C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\components\\Status.js",[],"C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\pages\\mainPage\\MainPage.js",["38","39"],"import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MapContainer from \"../../components/mapContainer/MapContainer\";\r\nimport {\r\n    BottomNavigation,\r\n    BottomNavigationAction,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle\r\n} from \"@material-ui/core\";\r\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\n\r\n\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginRight: drawerWidth,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n\r\nfunction MainPage(props) {\r\n    const classes = useStyles();\r\n\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n//modal\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Permanent drawer\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={2}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <MapContainer/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n                            <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon/>} onClick={handleClickOpen} />\r\n                            <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\r\n                            <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\r\n                        </BottomNavigation>\r\n                    </Grid>\r\n                </Grid>\r\n            </main>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n                anchor=\"right\"\r\n            >\r\n                <div className={classes.toolbar} />\r\n                <Divider />\r\n                <List>\r\n                    {['Date', 'Game Speed', 'Trust Level', 'Game Money'].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            {/*<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>*/}\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    {[1, 2, 3,4,5,6].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            {/*<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>*/}\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n\r\n                <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                        Modal title\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <Typography gutterBottom>\r\n                            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\r\n                            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\r\n                            lacus vel augue laoreet rutrum faucibus dolor auctor.\r\n                        </Typography>\r\n                        <Typography gutterBottom>\r\n                            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\r\n                            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\r\n                            auctor fringilla.\r\n                        </Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                            Save changes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default MainPage;","C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\pages\\welcomePage\\WelcomePage.js",["40","41"],"import React from 'react';\r\nimport {Button, Container, Typography} from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nfunction WelcomePage(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container fixed>\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={5}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h1\" component=\"h2\">\r\n                            Bakalarska praca - Simulacna hra\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\">\r\n                            <Link to=\"/game\">Play game</Link>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\">Guide</Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n        </Container>\r\n\r\n        );\r\n}\r\n\r\nexport default WelcomePage;","C:\\Users\\smoof\\IdeaProjects\\bakalarsky_projekt\\src\\components\\mapContainer\\MapContainer.js",["42"],"import React, {useEffect, useState} from \"react\";\r\nimport {csv} from \"d3-fetch\";\r\nimport {scaleLinear} from \"d3-scale\";\r\nimport {\r\n    ComposableMap,\r\n    Geographies,\r\n    Geography,\r\n    Sphere,\r\n    Graticule, ZoomableGroup\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\r\n    \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst colorScale = scaleLinear()\r\n    .domain([0.29, 0.68])\r\n    .range([\"#ffedea\", \"#ff5233\"]);\r\n\r\nconst MapContainer = (props) => {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        csv(`/vulnerability.csv`).then((data) => {\r\n            setData(data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <ComposableMap\r\n            projectionConfig={{\r\n                rotate: [-10, 0, 0],\r\n                scale: 155\r\n            }}\r\n            width={800}\r\n            height={400}\r\n            style={{ width: \"90%\", height: \"auto\", marginLeft:\"5%\" }}\r\n        >\r\n            <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5}/>\r\n            <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5}/>\r\n            {data.length > 0 && (\r\n                <Geographies geography={geoUrl}>\r\n                    {({geographies}) =>\r\n                        geographies.map((geo) => {\r\n                            const d = data.find((s) => s.ISO3 === geo.properties.ISO_A3);\r\n                            return (\r\n                                <Geography\r\n                                    key={geo.rsmKey}\r\n                                    geography={geo}\r\n                                    fill={d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                </Geographies>\r\n            )}\r\n        </ComposableMap>\r\n    );\r\n};\r\n\r\nexport default MapContainer;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":14},{"ruleId":"47","severity":1,"message":"51","line":3,"column":9,"nodeType":"49","messageId":"50","endLine":3,"endColumn":13},{"ruleId":"47","severity":1,"message":"52","line":14,"column":8,"nodeType":"49","messageId":"50","endLine":14,"endColumn":20},{"ruleId":"47","severity":1,"message":"53","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":13},{"ruleId":"47","severity":1,"message":"54","line":20,"column":11,"nodeType":"49","messageId":"50","endLine":20,"endColumn":18},{"ruleId":"47","severity":1,"message":"55","line":9,"column":16,"nodeType":"49","messageId":"50","endLine":9,"endColumn":29},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Status' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'ListItemIcon' is defined but never used.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","'ZoomableGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]